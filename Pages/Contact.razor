@page "/contact"
@using System.ComponentModel.DataAnnotations
@using System.Text
@using System.Text.Json
@inject HttpClient Http

<PageTitle>Contact</PageTitle>

<h1>Suggestion Box</h1>

<p>Drop any suggestions for improvements here!</p>

<EditForm Model="@suggestion" OnValidSubmit="HandleSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label>Name:</label>
        <InputText @bind-Value="suggestion.Name" class="form-control" style="width: 75%" />
    </div>
    <div>
        <label>Your Email:</label>
        <InputText @bind-Value="suggestion.Email" class="form-control" style="width: 75%" />
    </div>
    <div>
        <label>Suggest an Improvement!</label>
        <InputTextArea @bind-Value="suggestion.Message" class="form-control" style="width: 75%"  rows="4"/>
    </div>
    <button type="submit" class="btn btn-primary mt-2" disabled="@isSubmitting">
        @if (isSubmitting)
        {
            <span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>
            <text>Sending...</text>
        }
        else
        {
            <text>Submit</text>
        }
    </button>
</EditForm>

@if (!string.IsNullOrEmpty(responseMessage))
{
    <div class="alert alert-info mt-2">
        @responseMessage
    </div>
}


@code {
    private SuggestionModel suggestion = new();
    private bool submitted = false;
    private string responseMessage = "";
    private bool isSubmitting = false;

    private async Task HandleSubmit() {
        isSubmitting = true;
        try{
            var form = new ContactFormDto
            {
                name = suggestion.Name,
                email = suggestion.Email,
                message = suggestion.Message
            };
            var json = JsonSerializer.Serialize(form);

            var content = new StringContent(json, Encoding.UTF8, "application/json");
            var response = await Http.PostAsync("https://formspree.io/f/mgvywwja", content);

            responseMessage = response.IsSuccessStatusCode ? "Thank you for your suggestion!" : "There was an error.";
        }
        catch (Exception e)
        {
            responseMessage = $"Exception occurred: {e.Message}";
        }
        finally 
        {
            isSubmitting = false;
        }
        StateHasChanged();
    }

    public class SuggestionModel {
        [Required]
        public string Name {get; set;}
        [Required]
        public string Email {get; set;}

        [Required]
        [StringLength(200)]
        public string Message {get; set;}
    }

    public class ContactFormDto
{
    public string name { get; set; }
    public string email { get; set; }
    public string message { get; set; }
}
}